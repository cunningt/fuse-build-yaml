product:
  name: Red Hat Fuse
  abbreviation: Fuse-and-FIS
  stage: ${build.milestone}
  issueTrackerUrl: http://issues.jboss.org/browse/ENTESB
version: ${version.fuse.prefix}
milestone: ${build.milestone}
group: Red Hat Fuse - Spring Boot 2 ${version.fuse.project} ${build.milestone}
defaultBuildParameters:
  environmentId: 8
  buildScript: 'mvn -e -V -B -Dmaven.test.skip=true -DfailIfNoTests=false -Dtest=false clean
    deploy '

builds:
- name: fuse-karaf-${version.fuse.prefix}
  project: jboss-fuse/fuse-karaf
    #fetchScmUrl: ${fuse-karaf.fetch.scmUrl}
    #pushScmUrl: ${fuse-karaf.push.scmUrl}
    #tag: fuse-karaf-${version.bom.fuse}
    #buildCommand: ${fuse-karaf.buildCommand}
  scmUrl: git+ssh://code.engineering.redhat.com/jboss-fuse/fuse-karaf.git
  externalScmUrl: ssh://git@github.com/jboss-fuse/fuse-karaf.git
  scmRevision: fuse-karaf-${version.bom.fuse}
  pigYamlMetadata: Fuse dev build ${build.url} Fuse ${yaml.name} yaml config ${project.version}
  buildScript: 'mvn -e -V -B -Dmaven.test.skip=true -DfailIfNoTests=false -Dtest=false -Psap
    clean deploy dependency:tree'
  alignmentParameters:
    - ${fuse-karaf.pme.options}

- name: redhat-fuse-${version.fuse.prefix}
  project: jboss-fuse/redhat-fuse
    #fetchScmUrl: ${redhat-fuse.fetch.scmUrl}
    #pushScmUrl: ${redhat-fuse.push.scmUrl}
    #tag: ${redhat-fuse.tag}
    #buildCommand: ${redhat-fuse.buildCommand}
  scmUrl: git+ssh://code.engineering.redhat.com/jboss-fuse/redhat-fuse.git
  externalScmUrl: ssh://git@github.com/jboss-fuse/redhat-fuse.git
  scmRevision: redhat-fuse-${fuse-bom.version}
  pigYamlMetadata: Fuse dev build ${build.url} Fuse ${yaml.name} yaml config ${project.version}
  buildScript: 'mvn -e -V -B  -Dmaven.test.skip=true -DfailIfNoTests=false -Dtest=false -P clean
    deploy -DskipClean'
  alignmentParameters:
    - ${redhat-fuse.pme.options}
  dependencies:
  - fuse-karaf-${version.fuse.prefix}

- name: narayana-spring-boot-2.1.1-${version.fuse.prefix}
    #fetchScmUrl: ${narayana-spring-boot.fetch.scmUrl}
    #pushScmUrl: ${narayana-spring-boot.push.scmUrl}
    #tag: ${narayana-spring-boot.tag}
    #buildCommand: ${narayana-spring-boot.buildCommand}
  project: jboss-fuse/narayana-spring-boot
  scmUrl: git+ssh://code.engineering.redhat.com/jboss-fuse/narayana-spring-boot.git
  externalScmUrl: ssh://git@github.com/jboss-fuse/narayana-spring-boot.git
  scmRevision: narayana-spring-boot-${narayana-spring-boot.version}
  pigYamlMetadata: Fuse dev build ${build.url} Fuse ${yaml.name} yaml config ${project.version}
  buildScript: 'mvn -e -V -B -Dmaven.test.skip=true -DfailIfNoTests=false -Dtest=false -Prelease clean deploy dependency:tree -DskipClean'
  alignmentParameters:
    - ${narayana-spring-boot.pme.options}
  dependencies:
    - camel-2.23.2-${version.fuse.prefix}

- name: application-templates-1.0.0-${version.fuse.prefix}
    #fetchScmUrl: ${application-templates.fetch.scmUrl}
    #pushScmUrl: ${application-templates.push.scmUrl}
    #tag: apicurio-registry-${version.application-templates}
    #buildCommand: ${application-templates.buildCommand}
  project: jboss-fuse/application-templates
  scmUrl: git+ssh://code.engineering.redhat.com/jboss-fuse-application-templates.git
  externalScmUrl: ssh://git@github.com/jboss-fuse/application-templates.git
  scmRevision: application-templates-${version.application-templates}
  buildScript: 'mvn -B clean deploy dependency:tree -Dmaven.test.skip=true -Pprod -Pkafka -Pjpa'
  alignmentParameters:
    - ${application-templates.pme.options}
  dependencies:
    - redhat-fuse-${version.fuse.prefix}
    - ipaas-quickstarts-2.2.0-${version.fuse.prefix}

- name: hawtio-online-1.0.0-${version.fuse.prefix}
  project: hawtio/hawtio-online
    #fetchScmUrl: ${hawtio-online.fetch.scmUrl}
    #pushScmUrl: ${hawtio-online.push.scmUrl}
    #tag: hawtio-online-${version.hawtio.online}
    #buildCommand: ${hawtio-online.buildCommand}
    #cherrypick: true
  scmUrl: git+ssh://code.engineering.redhat.com/hawtio/hawtio-online.git
  externalScmUrl: ssh://git@github.com/jboss-fuse/hawtio-online.git
  scmRevision: hawtio-online-${version.hawtio.online}
  pigYamlMetadata: Fuse dev build ${build.url} Fuse ${yaml.name} yaml config ${project.version}
  buildScript: >
    export REG="http://indy.newcastle.svc.cluster.local/api/folo/track/${buildContentId}/npm/remote/yarnpkg/"

    sed -i "s#https://registry.yarnpkg.com/#${REG}/#g" yarn.lock

    sed -i 's#https:#http:#g' yarn.lock

    mvn -e -V -B -Dmaven.test.skip=true -DfailIfNoTests=false
    -Dproxy -Dtest=false -DnpmRegistryURL=$REG -DnpmDownloadRoot=http://download-node-02.eng.bos.redhat.com/rcm-guest/staging/fuse/npm/dist/npm/
    -DyarnRegistry=$REG -Dmaven.test.skip=true=true -DyarnDownloadRoot=http://download-node-02.eng.bos.redhat.com/rcm-guest/staging/fuse/yarn/dist/
    -DnodeDownloadRoot=http://download-node-02.eng.bos.redhat.com/rcm-guest/staging/fuse/npm/dist/
    -Dyarn.install.args='--network-concurrency 1 --child-concurrency 1 --no-progress'
    clean deploy dependency:tree
  alignmentParameters:
    - ${hawtio-online.pme.options}
  dependencies:
  - hawtio-2.0.0-${version.fuse.prefix}

outputPrefixes:
  releaseFile: fuse-test
  releaseDir: fuse-test
flow:
  licensesGeneration:
    strategy: GENERATE

  repositoryGeneration:
    strategy: BUILD_GROUP
  #licensesGeneration: gen.downloadFrom 'karaf' matching '.*license\.zip'
  #licensesGeneration: gen.generate()
  #repositoryGeneration: gen.downloadFrom 'karaf' matching '.*-m2repo\.zip'
  #javadocGeneration: gen.downloadFrom 'karaf' matching '.*javadoc\.zip'
  #addons:
  #runtimeDependenciesAnalyzer:
  #  downloadFrom: 'WildFly-Swarm'
  #  matching: '.*runtime-dependencies\.zip'
  #  referenceBuild: 'WildFly-Swarm'
addons:
  notYetAlignedFromDependencyTree:
