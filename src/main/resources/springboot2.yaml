product:
  name: Red Hat Fuse
  abbreviation: Fuse-and-FIS Patch
  stage: ${build.milestone}
  issueTrackerUrl: http://issues.jboss.org/browse/ENTESB
version: ${version.fuse.prefix}
milestone: ${build.milestone}
group: Red Hat Fuse - Spring Boot 2 Patch ${version.fuse.project} ${build.milestone}
defaultBuildParameters:
  environmentId: 8
  buildScript: 'mvn -e -V -B -Dmaven.test.skip=true -DfailIfNoTests=false -Dtest=false clean
    deploy'

builds:
- name: fuse-karaf-${version.fuse.prefix}
  project: jboss-fuse/fuse-karaf
    #fetchScmUrl: ${fuse-karaf.fetch.scmUrl}
    #pushScmUrl: ${fuse-karaf.push.scmUrl}
    #tag: fuse-karaf-${version.bom.fuse}
    #buildCommand: ${fuse-karaf.buildCommand}
  scmUrl: git+ssh://code.engineering.redhat.com/jboss-fuse/fuse-karaf.git
  externalScmUrl: ssh://git@github.com/jboss-fuse/fuse-karaf.git
  scmRevision: fuse-karaf-${version.bom.fuse}
  pigYamlMetadata: Fuse dev build ${build.url} Fuse ${yaml.name} yaml config ${project.version}
  buildScript: 'mvn -e -V -B -Dmaven.test.skip=true -DfailIfNoTests=false -Dtest=false -Psap
    clean deploy '
  alignmentParameters:
    - ${fuse-karaf.pme.options}

- name: redhat-fuse-${version.fuse.prefix}
  project: jboss-fuse/redhat-fuse
    #fetchScmUrl: ${redhat-fuse.fetch.scmUrl}
    #pushScmUrl: ${redhat-fuse.push.scmUrl}
    #tag: ${redhat-fuse.tag}
    #buildCommand: ${redhat-fuse.buildCommand}
  scmUrl: git+ssh://code.engineering.redhat.com/jboss-fuse/redhat-fuse.git
  externalScmUrl: ssh://git@github.com/jboss-fuse/redhat-fuse.git
  scmRevision: redhat-fuse-${fuse-bom.version}
  pigYamlMetadata: Fuse dev build ${build.url} Fuse ${yaml.name} yaml config ${project.version}
  buildScript: 'mvn -e -V -B -Dmaven.test.skip=true -DfailIfNoTests=false -Dtest=false -P clean
    deploy -DskipClean'
  alignmentParameters:
    - ${redhat-fuse.pme.options}
  dependencies:
  - fuse-karaf-${version.fuse.prefix}

outputPrefixes:
  releaseFile: fuse-test
  releaseDir: fuse-test
flow:
  #licensesGeneration: gen.downloadFrom 'karaf' matching '.*license\.zip'
  #licensesGeneration: gen.generate()
  #repositoryGeneration: gen.downloadFrom 'karaf' matching '.*-m2repo\.zip'
  #javadocGeneration: gen.downloadFrom 'karaf' matching '.*javadoc\.zip'
  #addons:
  #runtimeDependenciesAnalyzer:
  #  downloadFrom: 'WildFly-Swarm'
  #  matching: '.*runtime-dependencies\.zip'
  #  referenceBuild: 'WildFly-Swarm'
