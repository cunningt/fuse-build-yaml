product:
  name: Red Hat DV
  abbreviation: Fuse-DV
  stage: ${build.milestone}
  issueTrackerUrl: https://issues.jboss.org/projects/TEIIDTOOLS/issues
version: ${version.fuse.prefix}
milestone: ${build.milestone}
group: Fuse DV ${version.fuse.prefix}
defaultBuildParameters:
  environmentId: 7
  buildScript: 'mvn -e -V -B -DskipTests -DfailIfNoTests=false -Dtest=false clean
    deploy'

builds:
- name: oreva-1.0.1 
  project: teiid/oreva
    #fetchScmUrl: ${oreva.fetch.scmUrl}
    #pushScmUrl: ${oreva.push.scmUrl}
    #tag: ${oreva.tag}
    #buildCommand: ${oreva.buildCommand}
  scmUrl: git+ssh://code.engineering.redhat.com/jboss-fuse/oreva.git
  externalScmUrl: ssh://git@github.com/jboss-fuse/oreva.git
  scmRevision: oreva-${version.oreva}
  pigYamlMetadata: Fuse dev build ${build.url} Fuse ${yaml.name} yaml config ${project.version}
  customPmeParameters:
    - ${oreva.pme.options}
  buildScript: 'mvn -e -V -B -DskipTests -DfailIfNoTests=false -Dtest=false -Dgpg.skip=true -Pcore-release clean deploy'

- name: teiid-12.3.0
  project: teiid/teiid
    #fetchScmUrl: ${teiid.fetch.scmUrl}
    #pushScmUrl: ${teiid.push.scmUrl}
    #tag: ${teiid.tag}
    #buildCommand: ${teiid.buildCommand}
  scmUrl: git+ssh://code.engineering.redhat.com/jboss-fuse/teiid.git
  externalScmUrl: ssh://git@github.com/jboss-fuse/teiid.git
  scmRevision: teiid-${version.teiid}
  pigYamlMetadata: Fuse dev build ${build.url} Fuse ${yaml.name} yaml config ${project.version}
  customPmeParameters:
    - ${teiid.pme.options}
  buildScript: >
     mvn -e -V -B -DskipTests -DfailIfNoTests=false -Dtest=false -Dgpg.skip=true -Pcore-release clean deploy
  dependencies:
  - oreva-1.0.1

- name: teiid-spring-boot-1.2.0
  project: teiid/teiid-spring-boot
    #fetchScmUrl: ${teiid-spring-boot.fetch.scmUrl}
    #pushScmUrl: ${teiid-spring-boot.push.scmUrl}
    #tag: teiid-spring-boot-${version.teiid-spring-boot}
    #buildCommand: ${teiid-spring-boot.buildCommand}
  scmUrl: git+ssh://code.engineering.redhat.com/jboss-fuse/teiid-spring-boot.git
  externalScmUrl: ssh://git@github.com/jboss-fuse/teiid-spring-boot.git
  scmRevision: teiid-spring-boot-${version.teiid-spring-boot}
  pigYamlMetadata: Fuse dev build ${build.url} Fuse ${yaml.name} yaml config ${project.version}
  customPmeParameters:
    - ${teiid-spring-boot.pme.options}
  buildScript: 'mvn -e -V -B -DskipTests -DfailIfNoTests=false -Dtest=false -DaltDeploymentRepository=indy-mvn::${AProxDeployUrl} -Dgpg.skip=true -Prelease clean deploy'
  dependencies:
  - teiid-12.3.0

- name: teiid-syndesis-0.0.6
  project: teiid/teiid-syndesis
    #fetchScmUrl: ${teiid-syndesis.fetch.scmUrl}
    #pushScmUrl: ${teiid-syndesis.push.scmUrl}
    #tag: teiid-syndesis-${version.teiid-syndesis}
    #buildCommand: ${teiid-syndesis.buildCommand}
  scmUrl: git+ssh://code.engineering.redhat.com/jboss-fuse/teiid-syndesis.git
  externalScmUrl: ssh://git@github.com/jboss-fuse/teiid-syndesis.git
  scmRevision: teiid-syndesis-${version.teiid-syndesis}
  pigYamlMetadata: Fuse dev build ${build.url} Fuse ${yaml.name} yaml config ${project.version}
  environmentId: 9
  customPmeParameters:
    - ${teiid-syndesis.pme.options}
  buildScript: 'mvn -e -V -B -DskipTests -DfailIfNoTests=false -Dtest=false -Dgpg.skip=true -Pcore-release clean deploy'
  dependencies:
  - teiid-spring-boot-1.2.0

- name: teiid-openshift-examples-1.2.0
  project: teiid/teiid-openshift-examples
    #fetchScmUrl: ${teiid-openshift-examples.fetch.scmUrl}
    #pushScmUrl: ${teiid-openshift-examples.push.scmUrl}
    #tag: ${teiid-openshift-examples.tag}
    #buildCommand: ${teiid-openshift-examples.buildCommand}
  scmUrl: git+ssh://code.engineering.redhat.com/jboss-fuse/teiid-openshift-examples.git
  externalScmUrl: ssh://git@github.com/jboss-fuse/teiid-openshift-examples.git
  scmRevision: teiid-openshift-examples-${version.teiid-openshift-examples}
  pigYamlMetadata: Fuse dev build ${build.url} Fuse ${yaml.name} yaml config ${project.version}
  customPmeParameters:
    - ${teiid-openshift-examples.pme.options}
  buildScript: 'mvn -e -V -B -DskipTests -DfailIfNoTests=false -Dtest=false clean deploy'
  dependencies:
  - teiid-spring-boot-1.2.0

outputPrefixes:
  releaseFile: dv-test
  releaseDir: dv-test
flow:
  #licensesGeneration: gen.downloadFrom 'karaf' matching '.*license\.zip'
  #licensesGeneration: gen.generate()
  #repositoryGeneration: gen.downloadFrom 'karaf' matching '.*-m2repo\.zip'
  #javadocGeneration: gen.downloadFrom 'karaf' matching '.*javadoc\.zip'
  #addons:
  #runtimeDependenciesAnalyzer:
  #  downloadFrom: 'WildFly-Swarm'
  #  matching: '.*runtime-dependencies\.zip'
  #  referenceBuild: 'WildFly-Swarm'
